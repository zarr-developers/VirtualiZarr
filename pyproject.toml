
[project]
name = "virtualizarr"
description = "Create virtual Zarr stores from archival data using xarray API"
readme = "README.md"
authors = [
    {name = "Thomas Nicholas", email = "tom@cworthy.org"}
]
license = {text = "Apache-2"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.9"
dynamic = ["version"]
dependencies = [
    "xarray>=2024.5.0",
    "kerchunk>=0.2.5",
    "h5netcdf",
    "pydantic",
    "numpy",
    "ujson",
    "packaging",
    "universal-pathlib"

]

[project.optional-dependencies]
test = [
    "codecov",
    "pre-commit",
    "pytest-mypy",
    "pytest-cov",
    "pytest",
    "scipy",
    "pooch",
    "ruff",
    "s3fs"

]


[project.urls]
Home = "https://github.com/TomNicholas/VirtualiZarr"
Documentation = "https://github.com/TomNicholas/VirtualiZarr/blob/main/README.md"

[build-system]
requires = [
    "setuptools>=61.0.0",
    "wheel",
    "setuptools_scm[toml]>=7.0",
    "check-manifest"
]

[tool.setuptools_scm]
write_to = "virtualizarr/_version.py"
write_to_template = '''
# Do not change! Do not track in version control!
__version__ = "{version}"
'''

[tool.setuptools.packages.find]
exclude = ["docs", "tests", "tests.*", "docs.*"]

[tool.setuptools.package-data]
datatree = ["py.typed"]



[mypy]
files = "virtualizarr/**/*.py"
show_error_codes = true

[tool.ruff]
# Same as Black.
line-length = 88
indent-width = 4
target-version = "py39"

exclude = [
    "docs",
    ".eggs"]

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "I"]
per-file-ignores = {}

# E402: module level import not at top of file
# E731: do not assign a lambda expression, use a def
# W503: line break before binary operator - not implimeted by ruff due to conflict with PEP8.

ignore = ["E402", "E731"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Indent with spaces, rather than tabs.
indent-style = "space"
# Respect magic trailing commas.
skip-magic-trailing-comma = false
# Automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["virtualizarr"]
