name: CI

on:
  push:
    branches: [ "main" ]
    paths-ignore:
    - 'docs/**'
  pull_request:
    branches: [ "main" ]
    types: [opened, reopened, synchronize, labeled]
    paths-ignore:
    - 'docs/**'
  schedule:
    - cron: "0 0 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: ${{ matrix.environment }}-build
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        environment: [test-py311, test-py312, min-deps, minio]
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.3
        with:
          pixi-version: v0.49.0
          environments: ${{ matrix.environment }}

      - name: List installed libraries
        run: |
          pixi list --environment ${{ matrix.environment }}

      - name: Determine test type
        id: test-type
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]] && \
             [[ "${{ contains(github.event.pull_request.labels.*.name, 'test-slow') }}" == "true" ]]; then
            echo "run-slow=true" >> $GITHUB_OUTPUT
            echo "Running slow tests due to 'test-slow' label"
          else
            echo "run-slow=false" >> $GITHUB_OUTPUT
            echo "Running standard tests (skipping slow tests)"
          fi

      - name: Run Tests
        run: |
          if [[ "${{ steps.test-type.outputs.run-slow }}" == "true" ]]; then
            pixi run -e ${{ matrix.environment }} run-tests-including-slow
          else
            pixi run -e ${{ matrix.environment }} run-tests-xml-cov
          fi

      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v3.1.4
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  check-docs:
    name: check-docs
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.3
        with:
          pixi-version: v0.49.0

      - name: List installed libraries
        run: |
          pixi install --environment docs
          pixi list --environment docs

      - name: Check documentation build for warnings
        run: |
          pixi run -e docs check-docs
